<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets">
<h:head><title>JSF 2: Options for Dealing with Variable-Length Results Data</title>
<link href="./css/styles.css" 
      rel="stylesheet" type="text/css"/> 
</h:head>
<h:body>
<h1 class="title">JSF 2: Options for Dealing with Variable-Length Results Data</h1>
<br/>
<p>The following examples illustrate some of the alternatives in action. The tutorial
section surveys the pros and cons of each approach in various circumstances, then
gives details on the ui:repeat option.</p>
<ul>
  <li><a href="bean.jsf">Build <i>simple</i> HTML in a bean.</a></li>
  <li><a href="data-table.jsf">Use a prebuilt component such as h:dataTable.</a></li>
  <li><a href="composite-component.jsf">Build your own composite component.</a></li>
  <li><a href="ui-repeat.jsf"><b>Loop with ui:repeat.</b></a> The main topic of this tutorial section.
      The other approaches are only briefly summarized in the tutorial, but h:dataTable and
      composite components are covered in depth in later tutorial sections.</li>
  <li><a href="scripting.jsf">Use JSP scripting and an explicit loop.</a></li>
</ul>

<ui:include src="/WEB-INF/snippets/training-course-ad.xhtml"/>
</h:body></html>