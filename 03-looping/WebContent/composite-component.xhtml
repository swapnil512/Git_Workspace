<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:utils="http://xmlns.jcp.org/jsf/composite/utils">
<h:head><title>Using a Composite Component</title>
<link href="./css/styles.css" 
      rel="stylesheet" type="text/css"/> 
<style type="text/css">
  .langs1 { font-style: italic; }
  .langs2 { font-weight: bold; color: blue; margin-top: -1em; }
</style>
</h:head>
<h:body>
<h1 class="title">Using a Composite Component</h1>
<br/>
<p>Sometimes the best option is designing a custom component to 
do the looping and to output the results in a relatively fixed format.
It all depends on whether you can give the Web page designers
the flexibility they need.</p>

<h2>First capgemini.com Developer</h2>
<ul>
  <li>Level: Junior</li>
  <li>First name: #{person1.firstName}</li>
  <li>Last name: #{person1.lastName}</li>
  <li>Languages: <utils:list value="#{person1.languages}" styleClass="langs1"/></li>
</ul>

<h2>Second capgemini.com Developer</h2>
<p>
Our second junior-level developer is 
#{person2.firstName} #{person2.lastName}. 
He is proficient in:
<utils:list value="#{person2.languages}" styleClass="langs2"/>
</p>
</h:body></html>